@using AuMVC.Data.Enums;
@model AuMVC.Data.Models.Variation
@{
    ViewData["Title"] = "Edit Variation";
}

<h2>Edit Variation</h2>


@using (Html.BeginForm("EditConfirm", "Variation", FormMethod.Post))
{
   
    @Html.HiddenFor(m => m.Id)
    <div class="form-group">
        @Html.LabelFor(m => m.VariationCode)
        @Html.TextBoxFor(m => m.VariationCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.VariationCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DateReleased)
        @Html.TextBoxFor(m => m.DateReleased, new { @class = "form-control", @type = "date" })
        @Html.ValidationMessageFor(m => m.DateReleased, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Contract)
        @Html.DropDownListFor(model => model.Contract,
                            Html.GetEnumSelectList<VariationContract>(),
                            "VariationContract", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Contract, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Location)
        @Html.TextBoxFor(m => m.Location, new { @class = "form-control", placeholder = "ex. Albania" })
        @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Comment)
        @Html.TextBoxFor(m => m.Comment, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.EOT)
        @Html.TextBoxFor(m => m.EOT, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.EOT, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Status)
        @Html.DropDownListFor(model => model.Status,
                        Html.GetEnumSelectList<VariationStatus>(),
                        "VariationStatus", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Claimed)
        @Html.TextBoxFor(m => m.Claimed, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Claimed, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Paid)
        @Html.TextBoxFor(m => m.Paid, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Paid, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PaymentDate)
        @Html.TextBoxFor(m => m.PaymentDate, new { @class = "form-control", @type = "date" })
        @Html.ValidationMessageFor(m => m.PaymentDate, "", new { @class = "text-danger" })
    </div>


    <button type="submit" class="btn btn-primary">Save</button>
}
